{"version":3,"sources":["components/post.component.js","components/home.component.js","components/product.component.js","App.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","headers","x-auth-token","localStorage","getItem","Post","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getProducts","asyncToGenerator","regenerator_default","a","mark","_callee","id","wrap","_context","prev","next","match","params","console","log","get","concat","then","res","data","setState","name","price","catch","err","error","sent","stop","state","react_default","createElement","shards_react_es","theme","Component","Home","products","_ref2","className","map","product","key","_id","style","width","margin","src","react_router_dom","to","courses","nameR","update","up","up2","handleChange","event","target","value","addPrice","updateName","updatePrice","getCouses","createCourse","_ref3","_callee2","_context2","preventDefault","post","toggle2","_x","apply","arguments","deleteCourse","_ref4","_callee3","_context3","delete","_x2","updateCourse","_ref5","_callee4","_context4","open","put","_x3","toggle","_ref6","_callee5","_context5","_ref7","up3","_x4","_ref8","_callee6","kk","_context6","open2","_x5","bind","assertThisInitialized","nm","_this2","onClick","rtr","htmlFor","placeholder","onChange","type","scope","course","ref","defaultValue","App","react_router","exact","path","component","Product","Boolean","window","location","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e81cc1a0.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport { Alert } from \"shards-react\";\r\n\r\nconst api = axios.create({\r\n    baseURL: `http://localhost:5000/`,\r\n    headers: {\r\n    \t'x-auth-token': localStorage.getItem('token')\r\n    }\r\n\r\n})\r\n\r\n\r\n export default class Post extends Component {\r\n\r\n\r\nconstructor(props) {\r\n        super(props);\r\n       // this.check();\r\n       \r\n        this.state = {\r\n            id : this.props.match.params.id,\r\n            name:'',\r\n            price:'',\r\n            error:''\r\n        }\r\n      \r\n        this.getProducts();  \r\n    }\r\n\r\n   \r\n\r\n    getProducts = async () => {\r\n    \tconst id = this.props.match.params.id;\r\n    \tconsole.log(id)\r\n      /* let data = await api.get(`/products/${id}`).then(({data}) =>\r\n        data);\r\n        this.setState({name: data.name, price: data.price})\r\n        console.log(data.name);\r\n*/\r\n        \tlet data = await api.get(`/products/${id}`).then(\r\n \t\t\tres=>{\r\n \t\t\tconsole.log(res.data);\r\n \t\t\tthis.setState({name: res.data.name, price: res.data.price})\r\n       \r\n         \t\t\t}).catch(\r\n \t\t\t\terr =>{\r\n \t\t\t\t\tconsole.log(err);\r\n \t\t\t\tthis.setState({error:\"products is not find\"})\r\n \t\t\t\t})\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n \t  render() {\r\n   if (this.state.error) {\r\nreturn (\r\n <Alert theme=\"danger\">{this.state.error}</Alert>\r\n )\r\n   }\r\n    return (\r\n    \t<div>\r\n      <h1>Product</h1>\r\n \r\n     \r\n     \r\n      \r\n  \r\n    <h3>{this.state.error}</h3>   \r\n  <h3>{this.state.name}</h3>\r\n<h3>{this.state.price}</h3>      \r\n   \r\n  \r\n      </div>\r\n      )\r\n}\r\n\r\n }\r\n\r\n\r\n","\r\n import React, {Component} from 'react';\r\n  import {Link} from \"react-router-dom\";\r\n import axios from 'axios';\r\nimport {\r\n  Card,\r\n  CardTitle,\r\n  CardImg,\r\n  CardBody,\r\n Button\r\n} from \"shards-react\";\r\n\r\n\r\n\r\n\r\n const api = axios.create({\r\n    baseURL: `http://localhost:5000/`,\r\n    headers: {\r\n      'x-auth-token': localStorage.getItem('token')\r\n    }\r\n\r\n})\r\n\r\n export default class Home extends Component {\r\n    state = {\r\n        products : [],\r\n        }\r\n\r\nconstructor() {\r\n        super();\r\n       // this.check();\r\n        this.getProducts();  \r\n    }\r\n\r\n      getProducts = async () => {\r\n        let data = await api.get('/products').then(({data}) =>\r\n        data);\r\n        this.setState({products: data})\r\n        console.log(data);\r\n    }\r\n\r\n      render() {\r\n   \r\n    return (\r\n      <div>\r\n      <h1>home</h1>\r\n      <div>\r\n      <div className=\"card-deck\">\r\n  \r\n      {this.state.products.map(product=><div key={product._id}>\r\n\r\n      <Card style={{ width: \"300px\", margin: \"10px\" }}>\r\n      \r\n      <CardImg src=\"https://place-hold.it/300x200\" />\r\n      <CardBody>\r\n        <CardTitle>{product.name}</CardTitle>\r\n        <p>{product.price}</p>\r\n        <Link to={'/post/'+product._id}  className=\"nav-link\">\r\n        <Button>Read more &rarr;</Button>\r\n        </Link>\r\n\r\n\r\n      </CardBody>\r\n      \r\n    </Card>\r\n\r\n\r\n      </div>)}\r\n\r\n    </div>\r\n    </div>\r\n      </div>\r\n      )\r\n  }\r\n }\r\n \r\n","\r\nimport React, { Component } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"shards-ui/dist/css/shards.min.css\"\r\n//import './style/md/css/bootstrap.css';\r\nimport {  Button, Modal, ModalBody, ModalHeader,  FormInput } from \"shards-react\";\r\n\r\n\r\nimport axios from 'axios'\r\n\r\nconst api = axios.create({\r\n    baseURL: `http://localhost:5000/`,\r\n    headers: {\r\n    \t'x-auth-token': localStorage.getItem('token')\r\n    }\r\n\r\n})\r\n\r\n export default class product extends Component {\r\n\r\n    state = {\r\n        courses : [],\r\n        name: '',\r\n        nameR:'',\r\n        update: '',\r\n        up: [],\r\n        up2: [],\r\n        \r\n        \r\n    }\r\n    handleChange = event => {\r\n        this.setState({name: event.target.value});\r\n        \r\n    }\r\n\r\n       addPrice = event => {\r\n        this.setState({price: event.target.value});\r\n       \r\n    }\r\n     updateName = event => {\r\n        this.setState({updateName: event.target.value});\r\n       \r\n    }\r\n\r\n       updatePrice = event => {\r\n        this.setState({updatePrice: event.target.value});\r\n       \r\n    }\r\n     \r\n     \r\n/*\r\n    handleSubmit = event => {\r\n     event.preventDefault();\r\n        axios.post('http://localhost:5000/products',{name: this.state.name, price: 777})\r\n        console.log(this.state.name)\r\n        this.getCouses();\r\n      \r\n    } \r\n*/\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.updatePrice = this.updatePrice.bind(this)\r\n      this.updateCourse = this.updateCourse.bind(this)\r\n  // this.state = { open: false };\r\n    this.toggle = this.toggle.bind(this);\r\n     this.toggle2 = this.toggle2.bind(this); \r\n       this.getCouses();\r\n    }\r\n    getCouses = async () => {\r\n        let data = await api.get('/products').then(({data}) =>\r\n        data);\r\n        this.setState({courses: data})\r\n        console.log(data);\r\n    }\r\n\r\n    createCourse = async (event) => {\r\n      console.log(this.state.price)\r\n      console.log(this.state.name)\r\n       if (this.state.name === '' && typeof(this.state.name) ==='undefined' )\r\n        {\r\n           console.log(\"ok\")\r\n    }else{\r\n       console.log(\"nope\")\r\n     \r\n        event.preventDefault();\r\n          let res =  await api.post('/products',{name: this.state.name, price: this.state.price})\r\n    console.log(res)\r\n    }\r\n    \r\n\r\n    //console.log(this.state.name);\r\n    \r\n   // console.log(this.state.img);\r\n      \r\n       \r\n    \r\n    //this.mainInput1.value = \"\";\r\n    this.toggle2();\r\n    //this.mainInput.value = \"\";\r\n     this.setState({name: \"\",price:\"\"});\r\n    this.getCouses();\r\n    }\r\n\r\n    \r\n    deleteCourse = async(id) => {\r\n         await api.delete(`products/delete/${id}`);\r\n          this.getCouses();\r\n      }\r\n\r\n    \r\n      updateCourse = async(id) => {\r\n        this.setState({\r\n      open: !this.state.open\r\n    });\r\n\r\n        \r\n        \tawait api.put(`products/update/${id}`,{name:this.state.updateName, price: this.state.updatePrice});\r\n        \t//this.setState({updateName: \"\",updatePrice:\"\"});\r\n\r\n       \r\n  \r\n        //id.preventDefault();\r\n         \r\n        // this.setState({gg: \"\"});\r\n        //this.mainInputd.value = \"\";\r\n         \r\n        console.log(this.state.update)\r\n        console.log(this.state.up2)\r\n        this.getCouses(); \r\n           \r\n    }\r\n    /*\r\n    gg = async() => {\r\n        this.setState({update: \"\"});\r\n        this.setState({name: \"\"});\r\n    }\r\n*/\r\n toggle = async(id) => {\r\n    this.setState({\r\n      open: !this.state.open\r\n\r\n    });\r\n  \r\n    \r\n    /*this.setState({\r\n      name: data.name\r\n    });*/\r\n   // this.setState({up: data.name})\r\n\r\n   if (id !== 'kk' && typeof(id) !=='undefined') {\r\n         let data = await api.get(`products/${id}`).then(({data}) =>\r\n        data);\r\n         this.setState({up: data.name,up2: data._id,up3: data.price})\r\n\r\n   //console.log(data.name);\r\n  } else {\r\n         console.log('Undefined or Null')\r\n\r\n}\r\n   \r\n\r\n  \r\n  }\r\n\r\n  rtr(nm) {\r\n\r\n    this.setState({\r\n      open2: !this.state.open2\r\n    });\r\n    console.log(this.state.open2)\r\n    console.log(nm);\r\n}\r\n\r\n toggle2 = async(kk) => {\r\n  console.log(kk);\r\n  this.setState({\r\n      open2: !this.state.open2,\r\n      nameR:''\r\n    });\r\n  //console.log(this.state.open2);\r\n  }\r\n\r\n\r\n\r\n   render() {\r\n    const { open } = this.state;\r\n    return (\r\n          <div>\r\n          <Button onClick={()=>this.rtr('nm')}>Add Product</Button>\r\n           <Modal  open={this.state.open2} toggle={this.toggle2} >\r\n          <ModalHeader>Header<Button className=\"jj\" onClick={()=>this.toggle2('kk')}>x</Button></ModalHeader>\r\n          <ModalBody>\r\n          <label htmlFor=\"username\">name</label>\r\n          <FormInput  \r\n              placeholder=\"My form input\"  onChange={this.handleChange}\r\n              />\r\n          <label htmlFor=\"username\">price</label>\r\n          <FormInput  type=\"number\" \r\n          placeholder=\"Enter Your product Price\"  onChange={this.addPrice}\r\n          />\r\n          \r\n\r\n        <Button onClick={this.createCourse}>Sumbit</Button>\r\n\r\n          \r\n          </ModalBody>\r\n        </Modal>\r\n      \r\n        \r\n   <table className=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">ID</th>\r\n      <th scope=\"col\">Name</th>\r\n      <th scope=\"col\">Price</th>\r\n      <th scope=\"col\">Update</th>\r\n      <th scope=\"col\">Delete</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    \r\n  \r\n\r\n     \r\n\r\n\r\n{this.state.courses.map(course=><tr key={course._id}>\r\n        \r\n  <th scope=\"row\">1</th>\r\n      <td> {course.name}</td>\r\n      <td>{course.price}</td>\r\n      <td><Button onClick={()=>this.toggle(course._id)}>Update</Button></td>\r\n       <td><button className=\"btn btn-danger\"  onClick={()=> this.deleteCourse(course._id)}>x</button> </td>\r\n            \r\n      \r\n     </tr>\r\n   \r\n      \r\n    )}\r\n  </tbody>\r\n</table>\r\n <Modal open={open} toggle={this.toggle}>\r\n          <ModalHeader>Header<Button className=\"jj\" onClick={()=>this.toggle('kk')}>x</Button></ModalHeader>\r\n          <ModalBody >\r\n           <label htmlFor=\"username\">name</label>\r\n             <FormInput  \r\n             ref=\"\" key={this.state.up} defaultValue={this.state.up}  onChange={this.updateName}\r\n              placeholder=\"My form input\" />\r\n               <label htmlFor=\"username\">price</label>\r\n              <FormInput type=\"text\" \r\n             value={this.updatePrice}  onChange={this.updatePrice}\r\n              placeholder=\"My form input\" />\r\n               <Button onClick={()=> this.updateCourse(this.state.up2)}>Sumbit</Button>\r\n             </ModalBody>\r\n        </Modal>\r\n             </div>\r\n\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\n//import logo from './logo.svg';\n//import './App.css';\n//import axios from 'axios';\n\n import \"shards-ui/dist/css/shards.min.css\";\n import './style/md/css/bootstrap.css';\nimport Post from  \"./components/post.component\";\nimport Home from  \"./components/home.component\";\nimport Product from  \"./components/product.component\";\n//import BootstrapModal from  \"./components/reactbootstrap.component\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n\n} from \"react-router-dom\";\n\n//import {BrowserRouter, Route, Switch ,useParams} from \"react-router-dom\";\n//import Update from  \"./components/update.component\";\n //import axios from 'axios';\n\n\nexport default class App extends Component{\n \nrender(){\n   \n        return (\n          <BrowserRouter>\n\n\n          <Switch>\n         \n           \n            <Route exact path=\"/\" component={Home}/>\n          <Route exact path=\"/product\" component={Product}/>\n            \n            <Route path=\"/post/:id\" component={Post} />\n          </Switch>\n          \n         \n        </BrowserRouter>\n        );\n    }\n  }\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}